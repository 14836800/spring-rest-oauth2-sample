description = 'spring-rest-oauth2-sample'
group = 'com.saintdan.framework'
version = '0.5.1-RELEASE'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'maven'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.4.RELEASE")
    }
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/libs-release" }
    }
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

ext {
    springBootVersion = '1.2.6.RELEASE'
    springOAuth2Version = '2.0.7.RELEASE'

    fastJsonVersion = '1.2.6'
    commonsLang3Version = '3.4'

    hsqldbVersion = '1.8.0.10'
    mysqlVersion = '5.1.36'

    jsonPathVersion = '2.0.0'
    junitVersion = '4.12'
}

dependencies {
    // Spring boot dependencies.
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"

    // Spring oauth2 dependency.
    compile "org.springframework.security.oauth:spring-security-oauth2:${springOAuth2Version}"

    // Other dependencies.
    compile "org.apache.commons:commons-lang3:${commonsLang3Version}"
    compile "com.alibaba:fastjson:${fastJsonVersion}"

    // DB dependencies.
    // You can choose one of them.
    // HSQLDB
    // compile "org.hsqldb:hsqldb:${hsqldbVersion}"

    // Mysql
    compile "mysql:mysql-connector-java:${mysqlVersion}"

    // Provide runtime dependencies.
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}"

    // Test dependencies.
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testCompile "com.jayway.jsonpath:json-path:${jsonPathVersion}"
    testCompile "com.jayway.jsonpath:json-path-assert:${jsonPathVersion}"
    testCompile "junit:junit:${junitVersion}"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

task generatePom << {
    pom{}.writeTo("pom.xml")
}
